{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT 0, `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT 0, `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT 0, `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT 0, `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT 10, `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT 10, `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:18"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='hallmarking';","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking_backup` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking_backup` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking_backup` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking_backup` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking_backup` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking_backup` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking_backup` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking_backup` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking_backup` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking_backup` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking_backup` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking_backup` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking_backup` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking_backup` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking_backup` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking_backup` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking_backup` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking_backup` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='transactions';","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT 0, `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT 0, `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT 0, `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT 0, `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='loyalty';","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`loyalty`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`loyalty`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`loyalty`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`loyalty`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`loyalty`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`loyalty`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`loyalty`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty_backup` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`loyalty`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`loyalty`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`loyalty`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT 0, `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty_backup` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT 0, `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`loyalty`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`loyalty`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`loyalty`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty_backup` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`loyalty`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`loyalty`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`loyalty`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty_backup` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`loyalty`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`loyalty`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`loyalty`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty_backup` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`loyalty`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`loyalty`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`loyalty`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty_backup` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`loyalty`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='transaction_items';","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transaction_items`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transaction_items`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items_backup` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items_backup` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transaction_items`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items_backup` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items_backup` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transaction_items`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items_backup` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items_backup` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transaction_items`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items_backup` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items_backup` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transaction_items`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items_backup` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items_backup` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transaction_items`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items_backup` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items_backup` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transaction_items`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items_backup` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items_backup` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transaction_items`);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items_backup` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items_backup` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items_backup`;","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-07 19:42:19"}
{"level":"info","message":"Database synchronized successfully.","timestamp":"2025-08-07 19:42:19"}
{"level":"info","message":"Server running on port 5000 in development mode.","timestamp":"2025-08-07 19:42:19"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-08-08 12:01:38"}
{"level":"info","message":"Database connected successfully.","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='users';","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`users`);","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`users`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`users`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_2`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`users`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`users`);","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`users`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_2`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`users`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users_backup` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): INSERT INTO `users_backup` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users`;","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): DROP TABLE `users`;","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): INSERT INTO `users` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users_backup`;","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): DROP TABLE `users_backup`;","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`users`);","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`users`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_2`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`users`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users_backup` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): INSERT INTO `users_backup` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users`;","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): DROP TABLE `users`;","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): INSERT INTO `users` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users_backup`;","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): DROP TABLE `users_backup`;","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`users`);","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`users`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_2`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`users`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users_backup` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): INSERT INTO `users_backup` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users`;","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): DROP TABLE `users`;","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): INSERT INTO `users` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users_backup`;","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): DROP TABLE `users_backup`;","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`users`);","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`users`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_2`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`users`)","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users_backup` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): INSERT INTO `users_backup` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users`;","timestamp":"2025-08-08 12:01:38"}
{"level":"debug","message":"Executing (default): DROP TABLE `users`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `users` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `users_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`users`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`users`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`users`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users_backup` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `users_backup` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `users`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `users` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `users_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`users`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`users`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`users`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users_backup` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `users_backup` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `users`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `users` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `users_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`users`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`users`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`users`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users_backup` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `users_backup` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `users`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `users` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `users_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`users`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`users`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`users`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users_backup` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `users_backup` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `users`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `users` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `users_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`users`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`users`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`users`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users_backup` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `users_backup` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `users`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `users` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `users_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`users`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`users`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`users`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users_backup` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `users_backup` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `users`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `users` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `users_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`users`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`users`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`users`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users_backup` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `users_backup` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `users`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY, `username` VARCHAR(50) NOT NULL UNIQUE, `email` VARCHAR(100) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `first_name` VARCHAR(50) NOT NULL, `last_name` VARCHAR(50) NOT NULL, `role` TEXT DEFAULT 'sales', `phone` VARCHAR(20), `is_active` TINYINT(1) DEFAULT 1, `last_login` DATETIME, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `users` SELECT `id`, `username`, `email`, `password`, `first_name`, `last_name`, `role`, `phone`, `is_active`, `last_login`, `created_at`, `updated_at` FROM `users_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `users_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`users`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='audit_logs';","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`audit_logs`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`audit_logs`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `audit_logs_backup` (`id` INTEGER PRIMARY KEY, `user_id` INTEGER REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, `action` VARCHAR(255) NOT NULL, `entity_type` VARCHAR(255), `entity_id` INTEGER, `details` JSON, `ip_address` VARCHAR(255), `user_agent` VARCHAR(255), `timestamp` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `audit_logs_backup` SELECT `id`, `user_id`, `action`, `entity_type`, `entity_id`, `details`, `ip_address`, `user_agent`, `timestamp` FROM `audit_logs`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `audit_logs`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `audit_logs` (`id` INTEGER PRIMARY KEY, `user_id` INTEGER REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, `action` VARCHAR(255) NOT NULL, `entity_type` VARCHAR(255), `entity_id` INTEGER, `details` JSON, `ip_address` VARCHAR(255), `user_agent` VARCHAR(255), `timestamp` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `audit_logs` SELECT `id`, `user_id`, `action`, `entity_type`, `entity_id`, `details`, `ip_address`, `user_agent`, `timestamp` FROM `audit_logs_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `audit_logs_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`audit_logs`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `audit_logs_backup` (`id` INTEGER PRIMARY KEY, `user_id` INTEGER REFERENCES `users` (`id`), `action` VARCHAR(255) NOT NULL, `entity_type` VARCHAR(255), `entity_id` INTEGER, `details` JSON, `ip_address` VARCHAR(255), `user_agent` VARCHAR(255), `timestamp` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `audit_logs_backup` SELECT `id`, `user_id`, `action`, `entity_type`, `entity_id`, `details`, `ip_address`, `user_agent`, `timestamp` FROM `audit_logs`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `audit_logs`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `audit_logs` (`id` INTEGER PRIMARY KEY, `user_id` INTEGER REFERENCES `users` (`id`), `action` VARCHAR(255) NOT NULL, `entity_type` VARCHAR(255), `entity_id` INTEGER, `details` JSON, `ip_address` VARCHAR(255), `user_agent` VARCHAR(255), `timestamp` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `audit_logs` SELECT `id`, `user_id`, `action`, `entity_type`, `entity_id`, `details`, `ip_address`, `user_agent`, `timestamp` FROM `audit_logs_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `audit_logs_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`audit_logs`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `audit_logs_backup` (`id` INTEGER PRIMARY KEY, `user_id` INTEGER REFERENCES `users` (`id`), `action` VARCHAR(255) NOT NULL, `entity_type` VARCHAR(255), `entity_id` INTEGER, `details` JSON, `ip_address` VARCHAR(255), `user_agent` VARCHAR(255), `timestamp` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `audit_logs_backup` SELECT `id`, `user_id`, `action`, `entity_type`, `entity_id`, `details`, `ip_address`, `user_agent`, `timestamp` FROM `audit_logs`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `audit_logs`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `audit_logs` (`id` INTEGER PRIMARY KEY, `user_id` INTEGER REFERENCES `users` (`id`), `action` VARCHAR(255) NOT NULL, `entity_type` VARCHAR(255), `entity_id` INTEGER, `details` JSON, `ip_address` VARCHAR(255), `user_agent` VARCHAR(255), `timestamp` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `audit_logs` SELECT `id`, `user_id`, `action`, `entity_type`, `entity_id`, `details`, `ip_address`, `user_agent`, `timestamp` FROM `audit_logs_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `audit_logs_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`audit_logs`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `audit_logs_backup` (`id` INTEGER PRIMARY KEY, `user_id` INTEGER REFERENCES `users` (`id`), `action` VARCHAR(255) NOT NULL, `entity_type` VARCHAR(255), `entity_id` INTEGER, `details` JSON, `ip_address` VARCHAR(255), `user_agent` VARCHAR(255), `timestamp` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `audit_logs_backup` SELECT `id`, `user_id`, `action`, `entity_type`, `entity_id`, `details`, `ip_address`, `user_agent`, `timestamp` FROM `audit_logs`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `audit_logs`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `audit_logs` (`id` INTEGER PRIMARY KEY, `user_id` INTEGER REFERENCES `users` (`id`), `action` VARCHAR(255) NOT NULL, `entity_type` VARCHAR(255), `entity_id` INTEGER, `details` JSON, `ip_address` VARCHAR(255), `user_agent` VARCHAR(255), `timestamp` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `audit_logs` SELECT `id`, `user_id`, `action`, `entity_type`, `entity_id`, `details`, `ip_address`, `user_agent`, `timestamp` FROM `audit_logs_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `audit_logs_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`audit_logs`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `audit_logs_backup` (`id` INTEGER PRIMARY KEY, `user_id` INTEGER REFERENCES `users` (`id`), `action` VARCHAR(255) NOT NULL, `entity_type` VARCHAR(255), `entity_id` INTEGER, `details` JSON, `ip_address` VARCHAR(255), `user_agent` VARCHAR(255), `timestamp` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `audit_logs_backup` SELECT `id`, `user_id`, `action`, `entity_type`, `entity_id`, `details`, `ip_address`, `user_agent`, `timestamp` FROM `audit_logs`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `audit_logs`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `audit_logs` (`id` INTEGER PRIMARY KEY, `user_id` INTEGER REFERENCES `users` (`id`), `action` VARCHAR(255) NOT NULL, `entity_type` VARCHAR(255), `entity_id` INTEGER, `details` JSON, `ip_address` VARCHAR(255), `user_agent` VARCHAR(255), `timestamp` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `audit_logs` SELECT `id`, `user_id`, `action`, `entity_type`, `entity_id`, `details`, `ip_address`, `user_agent`, `timestamp` FROM `audit_logs_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `audit_logs_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`audit_logs`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `audit_logs_backup` (`id` INTEGER PRIMARY KEY, `user_id` INTEGER REFERENCES `users` (`id`), `action` VARCHAR(255) NOT NULL, `entity_type` VARCHAR(255), `entity_id` INTEGER, `details` JSON, `ip_address` VARCHAR(255), `user_agent` VARCHAR(255), `timestamp` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `audit_logs_backup` SELECT `id`, `user_id`, `action`, `entity_type`, `entity_id`, `details`, `ip_address`, `user_agent`, `timestamp` FROM `audit_logs`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `audit_logs`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `audit_logs` (`id` INTEGER PRIMARY KEY, `user_id` INTEGER REFERENCES `users` (`id`), `action` VARCHAR(255) NOT NULL, `entity_type` VARCHAR(255), `entity_id` INTEGER, `details` JSON, `ip_address` VARCHAR(255), `user_agent` VARCHAR(255), `timestamp` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `audit_logs` SELECT `id`, `user_id`, `action`, `entity_type`, `entity_id`, `details`, `ip_address`, `user_agent`, `timestamp` FROM `audit_logs_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `audit_logs_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`audit_logs`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `audit_logs_backup` (`id` INTEGER PRIMARY KEY, `user_id` INTEGER REFERENCES `users` (`id`), `action` VARCHAR(255) NOT NULL, `entity_type` VARCHAR(255), `entity_id` INTEGER, `details` JSON, `ip_address` VARCHAR(255), `user_agent` VARCHAR(255), `timestamp` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `audit_logs_backup` SELECT `id`, `user_id`, `action`, `entity_type`, `entity_id`, `details`, `ip_address`, `user_agent`, `timestamp` FROM `audit_logs`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `audit_logs`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `audit_logs` (`id` INTEGER PRIMARY KEY, `user_id` INTEGER REFERENCES `users` (`id`), `action` VARCHAR(255) NOT NULL, `entity_type` VARCHAR(255), `entity_id` INTEGER, `details` JSON, `ip_address` VARCHAR(255), `user_agent` VARCHAR(255), `timestamp` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `audit_logs` SELECT `id`, `user_id`, `action`, `entity_type`, `entity_id`, `details`, `ip_address`, `user_agent`, `timestamp` FROM `audit_logs_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `audit_logs_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`audit_logs`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `audit_logs_backup` (`id` INTEGER PRIMARY KEY, `user_id` INTEGER REFERENCES `users` (`id`), `action` VARCHAR(255) NOT NULL, `entity_type` VARCHAR(255), `entity_id` INTEGER, `details` JSON, `ip_address` VARCHAR(255), `user_agent` VARCHAR(255), `timestamp` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `audit_logs_backup` SELECT `id`, `user_id`, `action`, `entity_type`, `entity_id`, `details`, `ip_address`, `user_agent`, `timestamp` FROM `audit_logs`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `audit_logs`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `audit_logs` (`id` INTEGER PRIMARY KEY, `user_id` INTEGER REFERENCES `users` (`id`), `action` VARCHAR(255) NOT NULL, `entity_type` VARCHAR(255), `entity_id` INTEGER, `details` JSON, `ip_address` VARCHAR(255), `user_agent` VARCHAR(255), `timestamp` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `audit_logs` SELECT `id`, `user_id`, `action`, `entity_type`, `entity_id`, `details`, `ip_address`, `user_agent`, `timestamp` FROM `audit_logs_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `audit_logs_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`audit_logs`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='customers';","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`customers`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`customers`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT '0', `total_spent` DECIMAL(10,2) NOT NULL DEFAULT '0', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers_backup` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT '0', `total_spent` DECIMAL(10,2) NOT NULL DEFAULT '0', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`customers`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT '0', `total_spent` DECIMAL(10,2) NOT NULL DEFAULT '0', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers_backup` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT '0', `total_spent` DECIMAL(10,2) NOT NULL DEFAULT '0', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`customers`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT '0', `total_spent` DECIMAL(10,2) NOT NULL DEFAULT '0', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers_backup` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT '0', `total_spent` DECIMAL(10,2) NOT NULL DEFAULT '0', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`customers`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT '0', `total_spent` DECIMAL(10,2) NOT NULL DEFAULT '0', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers_backup` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT '0', `total_spent` DECIMAL(10,2) NOT NULL DEFAULT '0', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`customers`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT '0', `total_spent` DECIMAL(10,2) NOT NULL DEFAULT '0', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers_backup` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT '0', `total_spent` DECIMAL(10,2) NOT NULL DEFAULT '0', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`customers`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT '0', `total_spent` DECIMAL(10,2) NOT NULL DEFAULT '0', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers_backup` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT '0', `total_spent` DECIMAL(10,2) NOT NULL DEFAULT '0', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`customers`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT 0, `total_spent` DECIMAL(10,2) NOT NULL DEFAULT '0', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers_backup` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT 0, `total_spent` DECIMAL(10,2) NOT NULL DEFAULT '0', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`customers`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT '0', `total_spent` DECIMAL(10,2) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers_backup` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT '0', `total_spent` DECIMAL(10,2) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`customers`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT '0', `total_spent` DECIMAL(10,2) NOT NULL DEFAULT '0', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers_backup` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT '0', `total_spent` DECIMAL(10,2) NOT NULL DEFAULT '0', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`customers`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT '0', `total_spent` DECIMAL(10,2) NOT NULL DEFAULT '0', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers_backup` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) UNIQUE, `phone` VARCHAR(255) UNIQUE, `address` VARCHAR(255), `date_of_birth` DATE, `gender` TEXT, `loyalty_points` INTEGER NOT NULL DEFAULT '0', `total_spent` DECIMAL(10,2) NOT NULL DEFAULT '0', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `customers` SELECT `id`, `name`, `email`, `phone`, `address`, `date_of_birth`, `gender`, `loyalty_points`, `total_spent`, `created_at`, `updated_at` FROM `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `customers_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`customers`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_customers_2`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='gold_rates';","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`gold_rates`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`gold_rates`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`gold_rates`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_gold_rates_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`gold_rates`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`gold_rates`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`gold_rates`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_gold_rates_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`gold_rates`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `gold_rates_backup` (`id` INTEGER PRIMARY KEY, `purity` VARCHAR(4) NOT NULL UNIQUE, `rate` DECIMAL(10,2) NOT NULL DEFAULT '0', `last_updated_by` INTEGER REFERENCES `users` (`id`), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `gold_rates_backup` SELECT `id`, `purity`, `rate`, `last_updated_by`, `created_at`, `updated_at` FROM `gold_rates`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `gold_rates`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `gold_rates` (`id` INTEGER PRIMARY KEY, `purity` VARCHAR(4) NOT NULL UNIQUE, `rate` DECIMAL(10,2) NOT NULL DEFAULT '0', `last_updated_by` INTEGER REFERENCES `users` (`id`), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `gold_rates` SELECT `id`, `purity`, `rate`, `last_updated_by`, `created_at`, `updated_at` FROM `gold_rates_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `gold_rates_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`gold_rates`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`gold_rates`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_gold_rates_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`gold_rates`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `gold_rates_backup` (`id` INTEGER PRIMARY KEY, `purity` VARCHAR(4) NOT NULL UNIQUE, `rate` DECIMAL(10,2) NOT NULL DEFAULT 0, `last_updated_by` INTEGER REFERENCES `users` (`id`), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `gold_rates_backup` SELECT `id`, `purity`, `rate`, `last_updated_by`, `created_at`, `updated_at` FROM `gold_rates`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `gold_rates`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `gold_rates` (`id` INTEGER PRIMARY KEY, `purity` VARCHAR(4) NOT NULL UNIQUE, `rate` DECIMAL(10,2) NOT NULL DEFAULT 0, `last_updated_by` INTEGER REFERENCES `users` (`id`), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `gold_rates` SELECT `id`, `purity`, `rate`, `last_updated_by`, `created_at`, `updated_at` FROM `gold_rates_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `gold_rates_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`gold_rates`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`gold_rates`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_gold_rates_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`gold_rates`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `gold_rates_backup` (`id` INTEGER PRIMARY KEY, `purity` VARCHAR(4) NOT NULL UNIQUE, `rate` DECIMAL(10,2) NOT NULL DEFAULT '0', `last_updated_by` INTEGER REFERENCES `users` (`id`), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `gold_rates_backup` SELECT `id`, `purity`, `rate`, `last_updated_by`, `created_at`, `updated_at` FROM `gold_rates`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `gold_rates`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `gold_rates` (`id` INTEGER PRIMARY KEY, `purity` VARCHAR(4) NOT NULL UNIQUE, `rate` DECIMAL(10,2) NOT NULL DEFAULT '0', `last_updated_by` INTEGER REFERENCES `users` (`id`), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `gold_rates` SELECT `id`, `purity`, `rate`, `last_updated_by`, `created_at`, `updated_at` FROM `gold_rates_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `gold_rates_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`gold_rates`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`gold_rates`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_gold_rates_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`gold_rates`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `gold_rates_backup` (`id` INTEGER PRIMARY KEY, `purity` VARCHAR(4) NOT NULL UNIQUE, `rate` DECIMAL(10,2) NOT NULL DEFAULT '0', `last_updated_by` INTEGER REFERENCES `users` (`id`), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `gold_rates_backup` SELECT `id`, `purity`, `rate`, `last_updated_by`, `created_at`, `updated_at` FROM `gold_rates`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `gold_rates`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `gold_rates` (`id` INTEGER PRIMARY KEY, `purity` VARCHAR(4) NOT NULL UNIQUE, `rate` DECIMAL(10,2) NOT NULL DEFAULT '0', `last_updated_by` INTEGER REFERENCES `users` (`id`), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `gold_rates` SELECT `id`, `purity`, `rate`, `last_updated_by`, `created_at`, `updated_at` FROM `gold_rates_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `gold_rates_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`gold_rates`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`gold_rates`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_gold_rates_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`gold_rates`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `gold_rates_backup` (`id` INTEGER PRIMARY KEY, `purity` VARCHAR(4) NOT NULL UNIQUE, `rate` DECIMAL(10,2) NOT NULL DEFAULT '0', `last_updated_by` INTEGER REFERENCES `users` (`id`), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `gold_rates_backup` SELECT `id`, `purity`, `rate`, `last_updated_by`, `created_at`, `updated_at` FROM `gold_rates`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `gold_rates`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `gold_rates` (`id` INTEGER PRIMARY KEY, `purity` VARCHAR(4) NOT NULL UNIQUE, `rate` DECIMAL(10,2) NOT NULL DEFAULT '0', `last_updated_by` INTEGER REFERENCES `users` (`id`), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `gold_rates` SELECT `id`, `purity`, `rate`, `last_updated_by`, `created_at`, `updated_at` FROM `gold_rates_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `gold_rates_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`gold_rates`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_gold_rates_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='products';","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:39"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT 0, `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT 0, `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT 0, `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT 0, `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT 10, `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT 10, `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`products`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products_backup` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products_backup` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER PRIMARY KEY, `name` VARCHAR(100) NOT NULL, `description` TEXT, `category` VARCHAR(50), `subcategory` VARCHAR(50), `sku` VARCHAR(50) UNIQUE, `barcode` VARCHAR(100), `weight` DECIMAL(8,3), `purity` VARCHAR(20), `metal_type` VARCHAR(30), `stone_type` VARCHAR(30), `stone_weight` DECIMAL(8,3), `cost_price` DECIMAL(10,2), `selling_price` DECIMAL(10,2), `discount_percentage` DECIMAL(5,2) DEFAULT '0', `stock_quantity` INTEGER DEFAULT '0', `reorder_level` INTEGER DEFAULT '10', `supplier` VARCHAR(100), `is_active` TINYINT(1) DEFAULT 1, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `products` SELECT `id`, `name`, `description`, `category`, `subcategory`, `sku`, `barcode`, `weight`, `purity`, `metal_type`, `stone_type`, `stone_weight`, `cost_price`, `selling_price`, `discount_percentage`, `stock_quantity`, `reorder_level`, `supplier`, `is_active`, `created_at`, `updated_at` FROM `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `products_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`products`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_products_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='hallmarking';","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking_backup` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking_backup` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking_backup` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking_backup` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking_backup` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking_backup` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking_backup` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking_backup` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking_backup` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking_backup` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking_backup` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking_backup` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking_backup` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking_backup` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking_backup` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking_backup` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`hallmarking`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking_backup` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking_backup` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `hallmarking` (`id` INTEGER PRIMARY KEY, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `hallmark_number` VARCHAR(255) NOT NULL UNIQUE, `certifying_authority` VARCHAR(255), `certification_date` DATE, `purity_verified` TINYINT(1) NOT NULL DEFAULT 0, `weight_verified` TINYINT(1) NOT NULL DEFAULT 0, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `hallmarking` SELECT `id`, `product_id`, `hallmark_number`, `certifying_authority`, `certification_date`, `purity_verified`, `weight_verified`, `notes`, `created_at`, `updated_at` FROM `hallmarking_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `hallmarking_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`hallmarking`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_hallmarking_1`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='transactions';","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT 0, `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT 0, `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT 0, `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT 0, `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transactions`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions_backup` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transactions` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER REFERENCES `customers` (`id`), `user_id` INTEGER REFERENCES `users` (`id`), `transaction_type` TEXT DEFAULT 'sale', `total_amount` DECIMAL(10,2) NOT NULL, `discount_amount` DECIMAL(10,2) DEFAULT '0', `tax_amount` DECIMAL(10,2) DEFAULT '0', `final_amount` DECIMAL(10,2) NOT NULL, `payment_method` VARCHAR(30), `payment_status` VARCHAR(20) DEFAULT 'pending', `transaction_status` VARCHAR(20) DEFAULT 'completed', `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `transactions` SELECT `id`, `customer_id`, `user_id`, `transaction_type`, `total_amount`, `discount_amount`, `tax_amount`, `final_amount`, `payment_method`, `payment_status`, `transaction_status`, `notes`, `created_at`, `updated_at` FROM `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `transactions_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transactions`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='loyalty';","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`loyalty`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`loyalty`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`loyalty`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`loyalty`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`loyalty`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`loyalty`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`loyalty`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty_backup` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`loyalty`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`loyalty`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`loyalty`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT 0, `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty_backup` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT 0, `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty_backup`;","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`loyalty`);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`loyalty`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`loyalty`)","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:40"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty_backup` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`loyalty`);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`loyalty`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`loyalty`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty_backup` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`loyalty`);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`loyalty`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`loyalty`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty_backup` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`loyalty`);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`loyalty`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`loyalty`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty_backup` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty_backup` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `loyalty` (`id` INTEGER PRIMARY KEY, `customer_id` INTEGER NOT NULL REFERENCES `customers` (`id`), `points` INTEGER DEFAULT '0', `transaction_id` INTEGER REFERENCES `transactions` (`id`), `redeemed` TINYINT(1) DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `loyalty` SELECT `id`, `customer_id`, `points`, `transaction_id`, `redeemed`, `created_at`, `updated_at` FROM `loyalty_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `loyalty_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`loyalty`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='transaction_items';","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transaction_items`);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transaction_items`);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items_backup` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items_backup` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transaction_items`);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items_backup` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items_backup` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transaction_items`);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items_backup` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items_backup` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transaction_items`);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items_backup` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items_backup` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transaction_items`);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items_backup` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items_backup` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transaction_items`);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items_backup` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items_backup` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transaction_items`);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items_backup` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items_backup` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA TABLE_INFO(`transaction_items`);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA foreign_key_list(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items_backup` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items_backup` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `transaction_items` (`id` INTEGER PRIMARY KEY, `transaction_id` INTEGER NOT NULL REFERENCES `transactions` (`id`), `product_id` INTEGER NOT NULL REFERENCES `products` (`id`), `quantity` INTEGER NOT NULL, `unit_price` DECIMAL(10,2) NOT NULL, `total_price` DECIMAL(10,2) NOT NULL, `notes` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): INSERT INTO `transaction_items` SELECT `id`, `transaction_id`, `product_id`, `quantity`, `unit_price`, `total_price`, `notes`, `created_at`, `updated_at` FROM `transaction_items_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): DROP TABLE `transaction_items_backup`;","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): PRAGMA INDEX_LIST(`transaction_items`)","timestamp":"2025-08-08 12:01:41"}
{"level":"info","message":"Database synchronized successfully.","timestamp":"2025-08-08 12:01:41"}
{"level":"info","message":"Server running on port 5000 in development mode.","timestamp":"2025-08-08 12:01:41"}
{"level":"debug","message":"Executing (default): SELECT `id`, `username`, `email`, `password`, `first_name` AS `firstName`, `last_name` AS `lastName`, `role`, `phone`, `is_active`, `last_login`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt` FROM `users` AS `User` WHERE `User`.`username` = 'admin';","timestamp":"2025-08-08 12:02:12"}
{"level":"debug","message":"Executing (default): SELECT `id`, `username`, `email`, `password`, `first_name` AS `firstName`, `last_name` AS `lastName`, `role`, `phone`, `is_active`, `last_login`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt` FROM `users` AS `User` WHERE `User`.`username` = 'admin';","timestamp":"2025-08-08 12:02:35"}
{"level":"debug","message":"Executing (default): SELECT `id`, `username`, `email`, `password`, `first_name` AS `firstName`, `last_name` AS `lastName`, `role`, `phone`, `is_active`, `last_login`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt` FROM `users` AS `User` WHERE `User`.`username` = 'admin';","timestamp":"2025-08-08 12:11:04"}
